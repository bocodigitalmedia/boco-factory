// Generated by CoffeeScript 1.6.3
(function() {
  var Errors, Factory,
    __hasProp = {}.hasOwnProperty;

  Errors = require('./errors');

  Factory = (function() {
    function Factory(properties) {
      if (properties == null) {
        properties = {};
      }
      this.constructors = properties.constructors;
      this.setDefaults();
    }

    Factory.prototype.setDefaults = function() {
      if (this.constructors == null) {
        return this.constructors = {};
      }
    };

    Factory.prototype.construct = function(name, properties) {
      var constructor, error;
      if (properties == null) {
        properties = {};
      }
      if (!this.isRegistered(name)) {
        error = new Errors.ConstructorNotRegistered();
        error.setPayload({
          name: name
        });
        throw error;
      }
      constructor = this.getConstructor(name);
      return new constructor(properties);
    };

    Factory.prototype.register = function(constructors) {
      var constructor, name, _results;
      if (constructors == null) {
        constructors = {};
      }
      _results = [];
      for (name in constructors) {
        if (!__hasProp.call(constructors, name)) continue;
        constructor = constructors[name];
        _results.push(this.constructors[name] = constructor);
      }
      return _results;
    };

    Factory.prototype.getConstructor = function(name) {
      return this.constructors[name];
    };

    Factory.prototype.isRegistered = function(name) {
      return this.constructors.hasOwnProperty(name);
    };

    return Factory;

  })();

  module.exports = Factory;

}).call(this);

/*
//@ sourceMappingURL=Factory.map
*/
